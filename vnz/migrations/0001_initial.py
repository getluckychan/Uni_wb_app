# Generated by Django 4.1.3 on 2022-12-12 23:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MyUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("full_name", models.CharField(max_length=150)),
                ("date_of_birth", models.DateField()),
                ("is_student", models.BooleanField(default=False)),
                ("is_educator", models.BooleanField(default=False)),
                ("is_unistuff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("department", models.CharField(max_length=50)),
            ],
            options={
                "permissions": (
                    ("can_view_department", "Can view department"),
                    ("can_edit_department", "Can edit department"),
                    ("can_delete_department", "Can delete department"),
                    ("can_add_department", "Can add department"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Groups",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course",
                    models.CharField(
                        choices=[("1", "1"), ("2", "2"), ("3", "3"), ("4", "4")],
                        default="1",
                        max_length=50,
                    ),
                ),
                ("group_number", models.IntegerField()),
            ],
            options={
                "permissions": (
                    ("can_view_groups", "Can view groups"),
                    ("can_edit_groups", "Can edit groups"),
                    ("can_delete_groups", "Can delete groups"),
                    ("can_add_groups", "Can add groups"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=255)),
            ],
            options={
                "permissions": (
                    ("can_view_message", "Can view message"),
                    ("can_edit_message", "Can edit message"),
                    ("can_delete_message", "Can delete message"),
                    ("can_add_message", "Can add message"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Rank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rank", models.CharField(max_length=50)),
            ],
            options={
                "permissions": (
                    ("can_view_rank", "Can view rank"),
                    ("can_edit_rank", "Can edit rank"),
                    ("can_delete_rank", "Can delete rank"),
                    ("can_add_rank", "Can add rank"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Speciality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=20)),
            ],
            options={
                "permissions": (
                    ("can_view_speciality", "Can view speciality"),
                    ("can_edit_speciality", "Can edit speciality"),
                    ("can_delete_speciality", "Can delete speciality"),
                    ("can_add_speciality", "Can add speciality"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Subjects",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject_name", models.CharField(max_length=50)),
            ],
            options={
                "permissions": (
                    ("can_view_subjects", "Can view subjects"),
                    ("can_edit_subjects", "Can edit subjects"),
                    ("can_delete_subjects", "Can delete subjects"),
                    ("can_add_subjects", "Can add subjects"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Educator",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("acception", models.DateField()),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="vnz.department",
                    ),
                ),
                (
                    "rank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.rank"
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_educator", "Can view educator"),
                    ("can_edit_educator", "Can edit educator"),
                    ("can_delete_educator", "Can delete educator"),
                    ("can_add_educator", "Can add educator"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("acception", models.DateField()),
                ("graduation", models.DateField()),
                (
                    "speciality",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="vnz.speciality",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_student", "Can view student"),
                    ("can_edit_student", "Can edit student"),
                    ("can_delete_student", "Can delete student"),
                    ("can_add_student", "Can add student"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Unistuff",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("theme", models.CharField(max_length=150)),
                ("time", models.DurationField()),
                ("date", models.DateField()),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.groups"
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.subjects"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.educator"
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_test", "Can view test"),
                    ("can_edit_test", "Can edit test"),
                    ("can_delete_test", "Can delete test"),
                    ("can_add_test", "Can add test"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=500)),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.test"
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_task", "Can view task"),
                    ("can_edit_task", "Can edit task"),
                    ("can_delete_task", "Can delete task"),
                    ("can_add_task", "Can add task"),
                ),
            },
        ),
        migrations.CreateModel(
            name="SubjectForSpeciality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "speciality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.speciality"
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.subjects"
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_subjectforspeciality", "Can view subjectforspeciality"),
                    ("can_edit_subjectforspeciality", "Can edit subjectforspeciality"),
                    (
                        "can_delete_subjectforspeciality",
                        "Can delete subjectforspeciality",
                    ),
                    ("can_add_subjectforspeciality", "Can add subjectforspeciality"),
                ),
            },
        ),
        migrations.CreateModel(
            name="SpecialityInDepartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.department"
                    ),
                ),
                (
                    "speciality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.speciality"
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "can_view_specialityindepartment",
                        "Can view specialityindepartment",
                    ),
                    (
                        "can_edit_specialityindepartment",
                        "Can edit specialityindepartment",
                    ),
                    (
                        "can_delete_specialityindepartment",
                        "Can delete specialityindepartment",
                    ),
                    (
                        "can_add_specialityindepartment",
                        "Can add specialityindepartment",
                    ),
                ),
            },
        ),
        migrations.AddField(
            model_name="groups",
            name="speciality",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="vnz.speciality"
            ),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.CharField(max_length=150)),
                ("correctness", models.BooleanField()),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.task"
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_answer", "Can view answer"),
                    ("can_edit_answer", "Can edit answer"),
                    ("can_delete_answer", "Can delete answer"),
                    ("can_add_answer", "Can add answer"),
                ),
            },
        ),
        migrations.CreateModel(
            name="StudentTest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mark", models.FloatField()),
                ("date", models.DateField()),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.test"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.student"
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_studenttest", "Can view studenttest"),
                    ("can_edit_studenttest", "Can edit studenttest"),
                    ("can_delete_studenttest", "Can delete studenttest"),
                    ("can_add_studenttest", "Can add studenttest"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Marks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mark", models.FloatField()),
                ("date", models.DateField()),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.subjects"
                    ),
                ),
                (
                    "setted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="vnz.educator",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.student"
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_view_marks", "Can view marks"),
                    ("can_edit_marks", "Can edit marks"),
                    ("can_delete_marks", "Can delete marks"),
                    ("can_add_marks", "Can add marks"),
                ),
            },
        ),
        migrations.CreateModel(
            name="ListOfStudentPerGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.groups"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vnz.student"
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "can_view_listofstudentpergroup",
                        "Can view listofstudentpergroup",
                    ),
                    (
                        "can_edit_listofstudentpergroup",
                        "Can edit listofstudentpergroup",
                    ),
                    (
                        "can_delete_listofstudentpergroup",
                        "Can delete listofstudentpergroup",
                    ),
                    ("can_add_listofstudentpergroup", "Can add listofstudentpergroup"),
                ),
            },
        ),
        migrations.AddField(
            model_name="groups",
            name="curator",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="vnz.educator",
            ),
        ),
    ]
